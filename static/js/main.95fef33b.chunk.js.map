{"version":3,"sources":["component/ContactList/contactStyles.module.css","component/ContactForm/form.module.css","component/Filter/styles.module.css","component/Alert/styleAlert.module.css","component/Header/logo.module.css","component/ContactForm/Fade.module.css","FilterFade.module.css","component/ContactList/pop.module.css","component/Header/fade.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","component/Alert/alert.jsx","redux/contacts/contacts-selectors.js","component/Filter/Filter.js","component/ContactForm/Form.js","component/ContactList/ContactItem.jsx","component/ContactList/ContactList.jsx","component/Header/phonebook.jpg","component/Header/Header.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","changeFilter","axios","defaults","baseURL","fetchContact","dispatch","get","then","data","catch","error","Alert","className","styleAlert","alert","getLoading","state","contacts","loading","getContacts","items","getValueFilter","filter","getVisibleItems","createSelector","normalizedFilter","toLowerCase","contact","name","includes","connect","value","onChange","e","contactsActions","currentTarget","styles","filtr","label","input","type","ContactForm","number","hendleNameChange","event","setState","hendleSubmit","preventDefault","props","find","target","elements","setTimeout","onSubmit","reset","this","container","CSSTransition","in","timeout","classNames","fade","unmountOnExit","buttomForm","length","filterFade","onExiting","clearFilter","isLoading","Component","text","post","massage","contactsOperations","ContactItem","id","onDeleteContact","item","buttonContact","onClick","deleteContact","contactId","delete","fetchContacts","style","title","TransitionGroup","component","contactList","map","popTransition","Header","header","appear","src","foto","alt","width","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fef33b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactStyles_item__qGIml\",\"title\":\"contactStyles_title__F4DXG\",\"contactList\":\"contactStyles_contactList__1ok0T\",\"buttonContact\":\"contactStyles_buttonContact__1pgeu\",\"icon\":\"contactStyles_icon__1cJeM\",\"name\":\"contactStyles_name__3pUBk\",\"number\":\"contactStyles_number__1Vpco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"form_input__3UW-E\",\"label\":\"form_label__32xLP\",\"buttomForm\":\"form_buttomForm__CkSGY\",\"container\":\"form_container__1Fu4O\",\"loading\":\"form_loading__m6y7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1q1VR\",\"filtr\":\"styles_filtr__3OUHz\",\"input\":\"styles_input__2kJVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"styleAlert_alert__Wq58z\",\"error\":\"styleAlert_error__1StEV\",\"fade-enter\":\"styleAlert_fade-enter__2orVQ\",\"fade-enter-active\":\"styleAlert_fade-enter-active__2v7uf\",\"fade-exit\":\"styleAlert_fade-exit__3mYX3\",\"fade-exit-active\":\"styleAlert_fade-exit-active__2dRFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"logo_title__3BnLQ\",\"header\":\"logo_header__1B_-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Fade_enter__1ra3Y\",\"enterActive\":\"Fade_enterActive__29jcy\",\"exit\":\"Fade_exit__1rj_u\",\"exitActive\":\"Fade_exitActive__5u7Sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterFade_enter__3xtsw\",\"enterActive\":\"FilterFade_enterActive__l6nxY\",\"exit\":\"FilterFade_exit__2im73\",\"exitActive\":\"FilterFade_exitActive__1KzRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2eocX\",\"enterActive\":\"pop_enterActive__3YkXP\",\"exit\":\"pop_exit__Wnun9\",\"exitActive\":\"pop_exitActive__lYQuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__3k2pL\",\"appearActive\":\"fade_appearActive__27PZa\"};","//import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\n\r\n\r\nexport const deleteTodoRequest = createAction('contact/deleteTodoRequest');\r\nexport const deleteTodoSuccess = createAction('contact/deleteTodoSuccess');\r\nexport const deleteTodoError = createAction('contact/deleteTodoError');\r\n\r\n//export const deleteTodo=createAction('contact/Delete')\r\n\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter')\r\n\r\n\r\n\r\n//export default { addContactRequest,  addContactSuccess, addContactError, deleteTodo, changeFilter};","import axios from 'axios';\r\nimport  {addContactRequest,  addContactSuccess, addContactError, deleteTodoRequest,deleteTodoSuccess, deleteTodoError, fetchContactRequest, fetchContactSuccess, fetchContactError} from './contacts-actions'\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n export const fetchContact = () => dispatch => { \r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n        .get(`/contacts`)\r\n        .then(({data}) =>\r\n            dispatch(fetchContactSuccess(data) ),\r\n        )\r\n        .catch(error => dispatch(fetchContactError(error) ));\r\n}\r\n\r\nexport const addContact = (text) => dispatch => {\r\n  const contact = {\r\n    name: text.name,\r\n    number: text.number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.massage)));\r\n};\r\n\r\nexport const deleteTodo = contactId => dispatch => { \r\n    dispatch(deleteTodoRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() =>\r\n            dispatch(deleteTodoSuccess(contactId) ),\r\n        )\r\n        .catch(error => dispatch(deleteTodoError(error) ));\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport styleAlert from \"./styleAlert.module.css\";\r\n\r\nfunction Alert() {\r\n  return (\r\n    <div className={styleAlert.alert}>\r\n      <h1 className={styleAlert.error}> Contacts already exists! </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import {  createSelector } from '@reduxjs/toolkit'\r\n\r\n/*Form*/\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\n\r\n/*Filter*/\r\nexport const getValueFilter = state => state.contacts.filter;\r\n\r\n/*ContactsList*/\r\nexport const getVisibleItems = createSelector(\r\n    [getContacts, getValueFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n    }\r\n)\r\n/*export const getVisibleItems = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getValueFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n}*/","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.css'\r\nimport * as  contactsActions from '../../redux/contacts/contacts-actions'\r\nimport { connect } from 'react-redux';\r\nimport {getValueFilter} from '../../redux/contacts/contacts-selectors'\r\n\r\n\r\n\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.filtr}>\r\n      <label className={styles.label}>Find contacts by name</label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getValueFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport styles from './form.module.css';\r\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nimport {changeFilter}  from '../../redux/contacts/contacts-actions'\r\nimport Alert from '../Alert/alert';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport fade from './Fade.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport filterFade from '../../FilterFade.module.css';\r\nimport { getLoading, getContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    \r\n  }\r\n\r\ncomponentDidMount() {\r\n    this.props.fetchContact();\r\n}\r\n\r\n\r\n  //метод который обновляет состояние\r\n  hendleNameChange = (event) => {\r\n    const { name, value } = event.currentTarget\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  //метод который Submit form\r\n  hendleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (\r\n      this.props.contacts.find(\r\n        (items) => items.name === event.target.elements[0].value,\r\n      )\r\n    ) {\r\n      this.setState({\r\n        error: true,\r\n      })\r\n\r\n      return setTimeout(() => {\r\n        this.setState({\r\n          error: false,\r\n        })\r\n      }, 2500)\r\n    }\r\n    this.props.onSubmit(this.state)\r\n\r\n    this.reset()\r\n  }\r\n\r\n  //очистка форми\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <CSSTransition\r\n            in={this.state.error}\r\n            timeout={250}\r\n            classNames={fade}\r\n            unmountOnExit\r\n          >\r\n            <Alert />\r\n          </CSSTransition>\r\n\r\n          <form onSubmit={this.hendleSubmit}>\r\n            <label className={styles.label}>\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.label}>\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                name=\"number\"\r\n                type=\"tel\"\r\n                value={this.state.number}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n            <button className={styles.buttomForm} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={filterFade}\r\n          unmountOnExit\r\n          onExiting={() => this.props.clearFilter()}\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        {this.props.isLoading && <h1  className={styles.loading}>Загружаем...</h1>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts:  getContacts(state),\r\n  isLoading: getLoading(state),\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n  clearFilter: () => dispatch(changeFilter(\"\")),\r\n  fetchContact: () => dispatch(contactsOperations.fetchContact()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactStyles.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n\r\n      <button\r\n        className={styles.buttonContact}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      ></button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport popTransition from \"./pop.module.css\";\r\nimport style from \"./contactStyles.module.css\";\r\nimport * as contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { getVisibleItems } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = ({ contacts, deleteContact, clearFilter }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={style.title}>Contacts</h2>\r\n      <TransitionGroup component=\"ul\" className={style.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={popTransition}>\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => deleteContact(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(contactsOperations.deleteTodo(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContact()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","export default __webpack_public_path__ + \"static/media/phonebook.e4355707.jpg\";","import React from \"react\";\r\nimport style from \"./logo.module.css\";\r\nimport fade from \"./fade.module.css\";\r\nimport foto from \"./phonebook.jpg\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={style.header}>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={fade}\r\n        unmountOnExit\r\n      >\r\n        <h1 className={style.title}>\r\n          <img src={foto} alt=\"\" width=\"150px\" />\r\n          Phonebook\r\n        </h1>\r\n      </CSSTransition>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import { Component } from 'react'\nimport ContactForm from './component/ContactForm/Form'\nimport ContactList from './component/ContactList/ContactList'\nimport Header from './component/Header/Header'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <div>\n          <ContactForm />\n          <ContactList />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteTodoSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteTodoRequest]: () => true,\r\n  [deleteTodoSuccess]: () => false,\r\n  [deleteTodoError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactReducer from './contacts/contacts-reducer'\r\nimport { /*persistStore,  persistReducer ,*/ FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER} from 'redux-persist';\r\n//import storage from 'redux-persist/lib/storage';\r\n\r\n/*\r\nconst persistConfig = {\r\n    key: 'keyStorage',\r\n    storage,\r\n    blacklist: [\"filter\"]\r\n};*/\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER]\r\n        }\r\n    }), logger\r\n]\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n     contacts:    contactReducer\r\n    },\r\n    middleware,\r\n});\r\n\r\n//const persistor = persistStore(store)\r\nexport default store /*{store, persistor }*/;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react'\n\nconsole.log(store)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store /*.store*/}>\n     {/* <PersistGate loading={null} persistor={store.persistor}>*/}\n        <App />\n      {/*</PersistGate>*/}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}